# Enterprise Security Platform - Environment Configuration
# Copy this file to .env and update with your actual values

# Environment
DEPLOYMENT_ENV=development
PLATFORM_VERSION=1.0.0

# Database Configuration
POSTGRES_DB=security_platform
POSTGRES_USER=postgres
POSTGRES_PASSWORD=changeme_postgres_password
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# Elasticsearch Configuration
ELASTICSEARCH_HOST=elasticsearch:9200
ELASTICSEARCH_USERNAME=elastic
ELASTICSEARCH_PASSWORD=changeme_elastic_password

# Redis Configuration
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=changeme_redis_password

# Kibana Configuration
KIBANA_HOST=kibana:5601
KIBANA_USERNAME=kibana_system
KIBANA_PASSWORD=changeme_kibana_password

# API Gateway Configuration
API_GATEWAY_HOST=0.0.0.0
API_GATEWAY_PORT=8000
JWT_SECRET_KEY=changeme_jwt_secret_key_use_strong_random_string
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24

# AI Detection Service
AI_DETECTION_HOST=0.0.0.0
AI_DETECTION_PORT=8001
MODEL_PATH=/app/models
PREDICTION_THRESHOLD=0.8

# Incident Response Service
INCIDENT_RESPONSE_HOST=0.0.0.0
INCIDENT_RESPONSE_PORT=8002

# External Integrations
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
SLACK_CHANNEL=#security-alerts
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# JIRA Integration
JIRA_URL=https://your-company.atlassian.net
JIRA_USERNAME=your-jira-username
JIRA_API_TOKEN=your-jira-api-token
JIRA_PROJECT_KEY=SEC

# pfSense Integration
PFSENSE_URL=https://firewall.enterprise.com
PFSENSE_USERNAME=admin
PFSENSE_PASSWORD=changeme_pfsense_password
PFSENSE_API_KEY=your-pfsense-api-key

# Email Configuration
SMTP_HOST=smtp.enterprise.com
SMTP_PORT=587
SMTP_USERNAME=security@enterprise.com
SMTP_PASSWORD=changeme_smtp_password
SMTP_USE_TLS=true

# Threat Intelligence APIs
VIRUSTOTAL_API_KEY=your_virustotal_api_key
ABUSEIPDB_API_KEY=your_abuseipdb_api_key
OTXALIENVAUL_API_KEY=your_otx_api_key

# Monitoring and Metrics
PROMETHEUS_HOST=prometheus:9090
GRAFANA_HOST=grafana:3000
GRAFANA_ADMIN_PASSWORD=changeme_grafana_password

# Logging
LOG_LEVEL=INFO
LOG_FORMAT=json
SYSLOG_HOST=localhost
SYSLOG_PORT=514

# Security Settings
ENABLE_RATE_LIMITING=true
RATE_LIMIT_REQUESTS_PER_MINUTE=100
ENABLE_IP_WHITELISTING=false
ALLOWED_IPS=127.0.0.1,10.0.0.0/8,192.168.0.0/16

# SSL/TLS Configuration
SSL_CERT_PATH=/etc/ssl/certs/server.crt
SSL_KEY_PATH=/etc/ssl/private/server.key
SSL_CA_PATH=/etc/ssl/certs/ca.crt

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=security-platform-backups
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1

# Compliance Configuration
COMPLIANCE_FRAMEWORKS=SOC2,ISO27001,PCI-DSS
AUDIT_LOG_RETENTION_YEARS=7
EVIDENCE_STORAGE_BUCKET=compliance-evidence-bucket

# Performance Tuning
MAX_CONCURRENT_REQUESTS=1000
DATABASE_POOL_SIZE=20
REDIS_POOL_SIZE=10
ELASTICSEARCH_TIMEOUT=30

# Feature Flags
ENABLE_AI_DETECTION=true
ENABLE_AUTOMATED_RESPONSE=true
ENABLE_THREAT_INTELLIGENCE=true
ENABLE_COMPLIANCE_MONITORING=true
ENABLE_PERFORMANCE_MONITORING=true

# Development/Testing
DEBUG=false
TESTING=false
MOCK_EXTERNAL_APIS=false

# Docker Configuration
COMPOSE_PROJECT_NAME=enterprise-security-platform
DOCKER_REGISTRY=ghcr.io/your-org

# Network Configuration
NETWORK_SUBNET=172.20.0.0/16
INTERNAL_NETWORK=security-network

# Resource Limits
ELASTICSEARCH_HEAP_SIZE=2g
LOGSTASH_HEAP_SIZE=1g
REDIS_MAXMEMORY=1gb
