# Enterprise Security Platform - Splunk Saved Searches and Alerts
# Advanced threat correlation and detection rules

[Enterprise - Brute Force Attack Detection]
search = index=security sourcetype=suricata:alert signature="*brute*force*" OR signature="*authentication*failed*" | bucket _time span=5m | stats count by src_ip, dest_ip, _time | where count > 10 | eval severity="high", threat_type="brute_force"
dispatch.earliest_time = -15m
dispatch.latest_time = now
cron_schedule = */5 * * * *
enableSched = 1
alert.track = 1
alert.severity = 3
action.email = 1
action.email.to = security-team@enterprise.com
action.email.subject = ALERT: Brute Force Attack Detected - $result.src_ip$
action.webhook = 1
action.webhook.param.url = http://incident-response:8001/webhook/splunk-alert

[Enterprise - SQL Injection Detection]
search = index=security (sourcetype=suricata:alert signature="*SQL*injection*") OR (sourcetype=envoy:access path="*union*select*" OR path="*drop*table*" OR path="*information_schema*") | eval severity="critical", threat_type="sql_injection" | table _time, src_ip, dest_ip, signature, path, severity, threat_type
dispatch.earliest_time = -5m
dispatch.latest_time = now
cron_schedule = */1 * * * *
enableSched = 1
alert.track = 1
alert.severity = 4
action.email = 1
action.email.to = security-team@enterprise.com, compliance@enterprise.com
action.email.subject = CRITICAL: SQL Injection Attack - $result.src_ip$
action.webhook = 1
action.webhook.param.url = http://incident-response:8001/webhook/splunk-alert

[Enterprise - Data Exfiltration Detection]
search = index=security sourcetype=network:flow | bucket _time span=10m | stats sum(bytes_out) as total_bytes by src_ip, _time | where total_bytes > 1000000000 | eval severity="high", threat_type="data_exfiltration", gb_transferred=round(total_bytes/1024/1024/1024,2)
dispatch.earliest_time = -30m
dispatch.latest_time = now
cron_schedule = */10 * * * *
enableSched = 1
alert.track = 1
alert.severity = 3
action.email = 1
action.email.to = security-team@enterprise.com, dpo@enterprise.com
action.email.subject = ALERT: Potential Data Exfiltration - $result.src_ip$ ($result.gb_transferred$ GB)

[Enterprise - Malware Communication]
search = index=security sourcetype=suricata:alert (signature="*malware*" OR signature="*trojan*" OR signature="*botnet*" OR signature="*C2*" OR signature="*command*control*") | eval severity="critical", threat_type="malware_c2" | table _time, src_ip, dest_ip, signature, severity, threat_type
dispatch.earliest_time = -5m
dispatch.latest_time = now
cron_schedule = */1 * * * *
enableSched = 1
alert.track = 1
alert.severity = 4
action.email = 1
action.email.to = security-team@enterprise.com, incident-response@enterprise.com
action.email.subject = CRITICAL: Malware Communication Detected - $result.src_ip$
action.webhook = 1
action.webhook.param.url = http://incident-response:8001/webhook/splunk-alert

[Enterprise - Lateral Movement Detection]
search = index=security sourcetype=windows:security EventCode=4624 OR EventCode=4648 | bucket _time span=5m | stats dc(dest_host) as unique_hosts, values(dest_host) as hosts by src_user, _time | where unique_hosts > 5 | eval severity="medium", threat_type="lateral_movement"
dispatch.earliest_time = -15m
dispatch.latest_time = now
cron_schedule = */5 * * * *
enableSched = 1
alert.track = 1
alert.severity = 2
action.email = 1
action.email.to = security-team@enterprise.com
action.email.subject = ALERT: Potential Lateral Movement - $result.src_user$

[Enterprise - Privilege Escalation]
search = index=security sourcetype=windows:security EventCode=4672 OR EventCode=4728 OR EventCode=4732 | eval severity="high", threat_type="privilege_escalation" | table _time, src_user, dest_user, EventCode, severity, threat_type
dispatch.earliest_time = -10m
dispatch.latest_time = now
cron_schedule = */2 * * * *
enableSched = 1
alert.track = 1
alert.severity = 3
action.email = 1
action.email.to = security-team@enterprise.com, admin-team@enterprise.com
action.email.subject = ALERT: Privilege Escalation Detected - $result.src_user$

[Enterprise - Anomalous Network Traffic]
search = index=security sourcetype=network:flow | bucket _time span=15m | stats avg(bytes_total) as avg_bytes, stdev(bytes_total) as std_bytes by src_ip, dest_port | eval threshold=avg_bytes+(3*std_bytes) | where bytes_total > threshold | eval severity="medium", threat_type="traffic_anomaly"
dispatch.earliest_time = -1h
dispatch.latest_time = now
cron_schedule = */15 * * * *
enableSched = 1
alert.track = 1
alert.severity = 2

[Enterprise - Failed Authentication Spike]
search = index=security sourcetype=auth:failed | bucket _time span=5m | stats count by src_ip, _time | where count > 20 | eval severity="medium", threat_type="auth_spike"
dispatch.earliest_time = -15m
dispatch.latest_time = now
cron_schedule = */5 * * * *
enableSched = 1
alert.track = 1
alert.severity = 2

[Enterprise - Suspicious File Downloads]
search = index=security sourcetype=proxy:web (uri="*.exe" OR uri="*.zip" OR uri="*.rar" OR uri="*.bat" OR uri="*.ps1") src_ip!=internal_networks | eval severity="medium", threat_type="suspicious_download"
dispatch.earliest_time = -10m
dispatch.latest_time = now
cron_schedule = */5 * * * *
enableSched = 1
alert.track = 1
alert.severity = 2

[Enterprise - DNS Tunneling Detection]
search = index=security sourcetype=dns query_length>50 OR (query="*.*.*.*.*.*.*.*" AND query_type="TXT") | eval severity="high", threat_type="dns_tunneling"
dispatch.earliest_time = -10m
dispatch.latest_time = now
cron_schedule = */5 * * * *
enableSched = 1
alert.track = 1
alert.severity = 3

[Enterprise - Cryptocurrency Mining Detection]
search = index=security (sourcetype=network:flow dest_port=8333 OR dest_port=9333 OR dest_port=4444) OR (sourcetype=proxy:web uri="*stratum*" OR uri="*mining*pool*") | eval severity="medium", threat_type="crypto_mining"
dispatch.earliest_time = -15m
dispatch.latest_time = now
cron_schedule = */10 * * * *
enableSched = 1
alert.track = 1
alert.severity = 2

[Enterprise - Insider Threat - After Hours Access]
search = index=security sourcetype=auth:success date_hour<7 OR date_hour>19 date_wday!=0 date_wday!=6 | stats count by user, _time | where count > 5 | eval severity="medium", threat_type="insider_threat"
dispatch.earliest_time = -1h
dispatch.latest_time = now
cron_schedule = 0 */1 * * *
enableSched = 1
alert.track = 1
alert.severity = 2

[Enterprise - Compliance - PCI DSS Violation]
search = index=security (sourcetype=application:log OR sourcetype=database:log) ("credit*card" OR "4[0-9]{12}(?:[0-9]{3})?" OR "5[1-5][0-9]{14}" OR "3[47][0-9]{13}") | eval severity="critical", threat_type="pci_violation", compliance_framework="PCI-DSS"
dispatch.earliest_time = -5m
dispatch.latest_time = now
cron_schedule = */1 * * * *
enableSched = 1
alert.track = 1
alert.severity = 4
action.email = 1
action.email.to = security-team@enterprise.com, compliance@enterprise.com, legal@enterprise.com
action.email.subject = CRITICAL: PCI DSS Violation Detected

[Enterprise - Threat Intelligence Correlation]
search = index=security | lookup threat_intel_ips ip as src_ip OUTPUT threat_level, threat_type, last_seen | where isnotnull(threat_level) | eval severity=case(threat_level="high","critical",threat_level="medium","high",threat_level="low","medium")
dispatch.earliest_time = -10m
dispatch.latest_time = now
cron_schedule = */5 * * * *
enableSched = 1
alert.track = 1
alert.severity = 3

[Enterprise - Security Metrics Dashboard]
search = index=security | bucket _time span=1h | stats count as total_events, count(eval(severity="critical")) as critical_events, count(eval(severity="high")) as high_events, count(eval(severity="medium")) as medium_events, count(eval(severity="low")) as low_events by _time | eval critical_percentage=round((critical_events/total_events)*100,2), high_percentage=round((high_events/total_events)*100,2)
dispatch.earliest_time = -24h
dispatch.latest_time = now
cron_schedule = 0 */1 * * *
enableSched = 1

[Enterprise - Incident Response Metrics]
search = index=security_incidents | bucket _time span=1d | stats count as total_incidents, avg(resolution_time) as avg_resolution_time, count(eval(status="resolved")) as resolved_incidents by _time | eval resolution_rate=round((resolved_incidents/total_incidents)*100,2), avg_resolution_hours=round(avg_resolution_time/3600,2)
dispatch.earliest_time = -30d
dispatch.latest_time = now
cron_schedule = 0 6 * * *
enableSched = 1
